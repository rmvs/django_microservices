version: '3.9'

networks:
  DEFAULT_STACK_NETWORK:
    external: true

services:
  todos:
    image: ghcr.io/rmvs/django-microservices-todos:latest
    container_name: todos
    networks:
      - DEFAULT_STACK_NETWORK
    #ports:
    #  - 8080:8080
    deploy:
      mode: replicated
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.todos.rule=Host(`todos.dev.br`)"
        #- "traefik.http.routers.todos.rule=Host(`/todos`)"
        - "traefik.http.routers.todos.entryPoints=web"
        - "traefik.http.routers.todos.service=todos"
        - "traefik.http.routers.todos.tls=false"
        - "traefik.http.services.todos.loadbalancer.server.port=8080"
        - "traefik.http.services.todos.loadbalancer.server.scheme=http"
        #- traefik.http.routers.todos.rule=Host(`todos.dev`)
        #- traefik.http.services.todos-service.loadbalancer.server.port=8080
      replicas: 2
      placement:
        constraints:
           - node.role == worker
  users:
    image: ghcr.io/rmvs/django-microservices-users:latest
    networks:
      - DEFAULT_STACK_NETWORK
    ports:
      - 8081:8081
    deploy:
      mode: replicated
      labels:
        - "traefik.enable=true"
        #- "traefik.http.routers.users.rule=PathPrefix(`/users`)"
        #- "traefik.http.routers.users.rule=Host(`${TUNNEL_HOST}`) && PathPrefix(`/users`)"
        - "traefik.http.routers.users.rule=Host(`users.dev.br`)"
        - "traefik.http.routers.users.entryPoints=web"
        - "traefik.http.routers.users.tls=false"
        - "traefik.http.routers.users.service=users"
        - "traefik.http.services.users.loadbalancer.server.port=8081"
        - "traefik.http.services.users.loadbalancer.server.scheme=http"
        #- traefik.http.routers.users.rule=Host(`users.dev`)
                #- traefik.http.services.users-service.loadbalancer.server.port=8081
      replicas: 2
      placement:
        constraints:
          - node.role == worker